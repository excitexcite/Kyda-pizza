@use "../abstract" as *;
@use "../base" as *;
@use "sass:math";

/// Side (bottom) menu with blured color baackground

.menu-blured-bg {
	position: fixed;
	bottom: 0;
	opacity: 0;
	width: 100%;
	// height: 100vh;
	height: 100%;
	z-index: 10;
	background-color: rgba(25, 25, 25, 0.25);
	backdrop-filter: blur(10px);
	visibility: hidden;
	transition: opacity 300ms ease-in-out 0ms;

	&--active {
		visibility: visible;
		opacity: 1;
	}
}

.menu-wrapper {
	margin-top: 60px;
	width: 100%;
	visibility: hidden;
	transform: translateY(1000%);
	transition: transform 300ms ease-in-out 0ms, visibility 300ms ease-in-out 0ms;

	&--active {
		visibility: visible;
		transform: translateY(0);
	}

	@include mqm(500) {
		width: auto;
		margin-top: 0;
		margin-left: auto;
		transform: translateY(0);
		transform: translateX(100%);

		&--active {
			transform: translateX(0);
		}
	}
}

.menu-content {
	position: relative;
	padding-bottom: 60px;
	height: 100vh;
	overflow-x: hidden;
	overflow-y: auto;
	background-color: $clr-white;
	border-top: 1px solid $grey-line;
	border-top-right-radius: 16px;
	border-top-left-radius: 16px;

	@include mqm(500) {
		padding-bottom: 0;
		border-top: 0px;
		border-top-right-radius: 0;
		border-top-left-radius: 0;
	}
}

/// SELECT WITH CUSTOM ARROW
/// USE FOLLOWING STUCTURE AND STYLES BASE

.select-wrapper {
	position: relative;
}

.select-element {
	min-height: inherit;
	background-color: transparent;
	cursor: pointer;
}

.select-arrow {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	pointer-events: none;
}

.logo {
	display: inline-flex;
	z-index: 5;
}

.link-primary {
	transition: color $linkTransition ease-in-out 0ms;

	@media (hover: hover) {
		&:hover {
			cursor: pointer;
			color: $primary;
		}
	}

	&:active {
		color: $primary;
		text-decoration: underline;
	}

	&:focus-visible {
		outline: 3px solid $clr-black;
	}
}

.link-inversed {
	transition: color $linkTransition ease-in-out 0ms;

	@media (hover: hover) {
		&:hover {
			cursor: pointer;
			color: $clr-black;
		}
	}

	&:active {
		color: $clr-black;
		text-decoration: underline;
	}
}

.link-primary-filled {
	transition: color $linkTransition ease-in-out 0ms,
		background-color $linkTransition ease-in-out 0ms;

	@media (hover: hover) {
		&:hover {
			cursor: pointer;
			color: $primary;
			background-color: $clr-black;
		}
	}

	&:active {
		color: $primary;
		background-color: $clr-black;
		outline: 3px solid $primary;
	}

	&:focus-visible {
		outline: 3px solid $primary;
	}
}

.summary {
	display: flex;
	flex-wrap: wrap;
	row-gap: 10px;
	justify-content: center;
	padding: 12px 10px;
	margin-top: auto;
	border-top: solid 1px $grey-line;

	@include mqm(390) {
		padding-inline: 20px;
		justify-content: space-between;
	}
}

.summary__numbers {
	display: flex;
	flex-flow: column;
	align-self: center;

	@include mqm(900) {
		flex-flow: row;
		align-items: center;
	}
}

.summary__weight {
	display: inline-flex;
	color: $grey-text;
	font-size: rem(14);
	line-height: math.div(18, 16);

	@include mqm(900) {
		margin-left: rem(12);
	}
}

.summary__sum {
	display: flex;
	flex-grow: 1;
	align-self: center;
	justify-content: center;
	font-weight: 600;
	color: $primary;
	@include adaptive-font(18, 20);
	line-height: math.div(22, 16);

	@include mqm(390) {
		justify-content: start;
	}

	@include mqm(768) {
		line-height: math.div(28, 16);
	}
}

.summary__button {
	padding: rem(13) rem(40);
	flex-basis: 100%;

	@include mqm(390) {
		flex-basis: auto;
	}
}

.text-input {
	min-height: rem(44);
	text-indent: rem(16);
	width: 100%;

	@include mqm(768) {
		min-height: rem(48);
	}

	&::placeholder {
		color: $grey-text;
		line-height: math.div(18, 16);

		@include mqm(768) {
			line-height: math.div(22, 16);
			font-size: rem(16);
		}
	}
}

.radio-button {
	width: rem(16);
	height: rem(16);
	border-radius: 50%;
	border: 1px solid $grey-text;
	vertical-align: middle;
	order: -1;
	cursor: pointer;

	&::before {
		display: block;
		content: "";
		width: rem(8);
		height: rem(8);
		border-radius: 50%;
		background-color: $primary;
		transform-origin: center;
		transform: scale(0);
		transition: transform 300ms ease-in;
	}

	&:checked {
		border-color: $primary;
	}

	&:checked::before {
		transform: scale(1);
	}

	&:focus {
		outline: none;
	}
}

.dropdown {
	@include mqm(768) {
		position: relative;

		&:after {
			content: "";
			border: 1rem solid transparent;
			border-bottom: 0.5rem solid $grey-line;
			position: absolute;
			left: 50%;
			transform: translateX(-50%);
			transition: $transition;
			opacity: 0;
			will-change: opacity;
			pointer-events: none;
		}

		&:hover,
		&:focus-within {
			.dropdown__menu {
				opacity: 1;
				transform: rotateX(0) translateX(-50%);
				visibility: visible;
			}

			.dropdown__menu .dropdown__menu-link {
				opacity: 1;
			}

			&:after {
				opacity: 1;
				pointer-events: revert;
			}
		}
	}
}

.dropdown__menu {
	@include mqm(768) {
		position: absolute;
		min-width: max-content;
		left: 50%;
		transition: $transition;
		transform: rotateX(-90deg) translateX(-50%);
		transform-origin: top center;
		visibility: hidden;
		opacity: 0.3;
		background-color: $grey-line;
		border-radius: 12px;
		box-shadow: $dropdownBoxShadow;

		/// trick to keep dropdown menu open while curson is on the space
		/// (actyally not the space but "::before") between navigation list
		/// item and dropdown menu
		/// top and height need to be adjusted for required space
		&:before {
			content: "";
			width: 100%;
			position: absolute;
			background-color: transparent;
		}
	}
}

.dropdown__title {
	display: inline-flex;
	align-items: center;
	cursor: pointer;

	&:after {
		content: "";
		border: 0.35rem solid transparent;
		border-top-color: $grey-text;
		margin-left: 0.25em;
		transform: translateY(0.25em);
	}
}

.dropdown__menu-item {
}

.dropdown__menu-link {
	@include mqm(768) {
		display: block;
		font-size: rem(16);
		line-height: math.div(22, 16);
		opacity: 0;
		transition: $transition;
	}
}
